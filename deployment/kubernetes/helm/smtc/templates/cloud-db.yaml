
{{- if contains $.Values.buildScope "cloud" }}

apiVersion: v1
kind: Service
metadata:
  name: {{ include "smtc.db.name" . }}-service
  labels:
    app: {{ include "smtc.db.name" . }}
spec:
  clusterIP: None
  ports:
  - port: 9200
    protocol: TCP
  selector:
    app: {{ include "smtc.db.name" . }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "smtc.db.name" . }}
  labels:
     app: {{ include "smtc.db.name" . }}
spec:
  serviceName: {{ include "smtc.db.name" . }}
  replicas: {{ int $.Values.database.haCloud }}
  selector:
    matchLabels:
      app: {{ include "smtc.db.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "smtc.db.name" . }}
        database: "yes"
    spec:
      enableServiceLinks: false
      securityContext:
        fsGroup: 1000
      containers:
        - name: {{ include "smtc.db.name" . }}
          image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.13
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9200
            - containerPort: 9300
          env:
            {{- if or (gt (int .Values.noffices) 1) (gt (int .Values.database.haCloud) 1) }}
            - name: "cluster.name"
              value: "cloud-cluster"
            - name: "node.name"
              value: "cloud-db"
            - name: "node.master"
              value: "true"
            - name: "node.data"
              value: "true"
            - name: "ES_JAVA_OPTS"
              value: "-Xms2048m -Xmx2048m"
            - name: "discovery.zen.minimum_master_nodes"
              value: "{{ if eq (mod (int $.Values.database.haCloud) 2) 0 }}{{ sub (int $.Values.database.haCloud) 1 }}{{ else }}{{ int $.Values.database.haCloud }}{{ end }}"
            - name: "discovery.zen.ping.unicast.hosts"
              value: "{{ include "smtc.db.name" . }}-service"
            {{- else }}
            - name: "discovery.type"
              value: "single-node"
            {{- end }}
            - name: "action.auto_create_index"
              value: "0"
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
          lifecycle:
            preStop:
              exec:
                command: ["/usr/bin/curl","-X","DELETE","http://localhost:9200/offices,sensors_*"]
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      initContainers:
        - name: init-volume-sysctl
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ["sh","-c","sysctl -w vm.max_map_count=262144 && ulimit -n 65535 && ulimit -u 4096"]
          securityContext:
            privileged: true
      volumes:
          - name: timezone
            hostPath:
                path: /etc/localtime
                type: File
      {{ include "smtc.platform.node-selector" . }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: database
                  operator: In
                  values:
                  - "yes"
              topologyKey: "kubernetes.io/hostname"

{{- end }}
