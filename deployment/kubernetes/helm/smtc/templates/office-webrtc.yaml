

{{- range $scenarioIdx, $scenarioName := $.Values.scenario }}
{{- $args := dict "scenarioName" $scenarioName "Values" $.Values }}
{{- range $officeIdx := until ( int ( include "smtc.noffices" $args ) ) }}
{{- $officeName := printf "%s-office%d" $scenarioName (add $officeIdx 1) }}
{{- $scope1 := printf "office%d-svc" (add $officeIdx 1) }}
{{- if contains $.Values.buildScope $scope1 }}
{{- $udpPort := add (int $.Values.webrtc.udpPort) (mul (int $.Values.webrtc.streamingLimit) (add (mul $officeIdx (len $.Values.scenario)) $scenarioIdx)) }}

apiVersion: v1
kind: Service
metadata:
  name: {{ $officeName }}-webrtc-service
  labels:
    app: {{ $officeName }}-webrtc
spec:
  ports:
    - port: 8888
      targetPort: 8888
  selector:
    app: {{ $officeName }}-webrtc

---

apiVersion: v1
kind: Service
metadata:
  name: {{ $officeName }}-webrtc-io-service
  labels:
    app: {{ $officeName }}-webrtc-io
spec:
  ports:
{{- range $portIdx := until ( int $.Values.webrtc.streamingLimit ) }}
    - name: port{{ $portIdx }}
      protocol: UDP
      port: {{ add $udpPort $portIdx 1 }}
      targetPort: {{ add $udpPort $portIdx 1 }}
{{- end }}
  externalIPs:
    - {{ $.Values.cloudWebExternalIP }}
  selector:
    app: {{ $officeName }}-webrtc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $officeName }}-webrtc
  labels:
     app: {{ $officeName }}-webrtc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $officeName }}-webrtc
  template:
    metadata:
      labels:
        app: {{ $officeName }}-webrtc
    spec:
      enableServiceLinks: false
      containers:
        - name: rabbitmq
          image: {{ $.Values.registryPrefix }}smtc_sensor_webrtc:latest
          imagePullPolicy: IfNotPresent
          command: [ "/usr/sbin/rabbitmq-server" ]
          env:
            - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
              value: "+sbwt none"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
          securityContext:
            runAsUser: 106
        - name: mongodb
          image: {{ $.Values.registryPrefix }}smtc_sensor_webrtc:latest
          imagePullPolicy: IfNotPresent
          command: [ "/usr/bin/mongod","--config","/etc/mongodb.conf" ]
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
          securityContext:
            runAsUser: 105
        - name: webrtc
          image: {{ $.Values.registryPrefix }}smtc_sensor_webrtc:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8888
{{- range $portIdx := until ( int $.Values.webrtc.streamingLimit ) }}
            - containerPort: {{ add $udpPort $portIdx 1 }}
              protocol: UDP
{{- end }}
          env:
            - name: OFFICE
              {{- $args := dict "scenarioName" $scenarioName "Values" $.Values "officeIdx" $officeIdx }}
              value: {{ include "smtc.env.office" $args | quote }}
            - name: DBHOST
              {{- $args := dict "officeName" $officeName "Values" $.Values }}
              value: {{ include "smtc.env.dbhost" $args | quote }}
            - name: WEBRTC_STREAMING_LIMIT
              value: "{{ $.Values.webrtc.streamingLimit }}"
            - name: WEBRTC_UDP_PORT
              value: "{{ $udpPort }}"
            - name: INACTIVE_TIME
              value: "10"
            - name: WEBRTC_HOSTIP
              value: {{ $.Values.cloudWebExternalIP }}
            - name: NO_PROXY
              value: "*"
            - name: no_proxy
              value: "*"
          volumeMounts:
            - mountPath: /etc/localtime
              name: timezone
              readOnly: true
          resources:
            limits:
              cpu: "4"
            requests:
              cpu: "0.5"
          securityContext:
            runAsUser: {{ $.Values.userId }}
      volumes:
          - name: timezone
            hostPath:
              path: /etc/localtime
              type: File
      {{ include "smtc.platform.node-selector" $ }}

---
{{- end }}
{{- end }}
{{- end }}
